---
description: リポジトリ内のコーディング規約やスタイルガイドについて
globs: .tsx,.ts
alwaysApply: false
---
- プロダクションコードは必ずsrc配下に配置すること。
- 堅牢性、可用性、再利用可能性、視認性（リーダブル）を考慮してコーディングすること。
- 必要な処理はできる限りutilsディレクトリにある共通モジュールをimportして使用すること。適したモジュールがない場合は、オリジナルでコードを提示してください。


# Components

- 共通利用可能なコンポーネントであること
- ドメイン情報を含まないこと



# Pages component

- URLと1対1の関係であること



# test

- テストのモジュールはvitestを使うこと。
- 機能適合性, 性能効率性, 互換性,使用性, 信頼性, セキュリティ, 保守性, 移植性の鑑定が考慮されたテストを書くこと
- テストは必ずユニット単位で記述し、関数やクラスごとにテストファイルを分割する（可読性・保守性向上）。
- テストコードと本体コードは同じ階層構造で管理し、どのテストがどの機能を担保しているか明確にする。
- 条件分岐や例外処理を含め、全てのパスを網羅するテストケースを用意する。
- テストカバレッジ（Coverage）を計測し、一定以上のカバレッジ率を維持する（例: Statements, Branches, Functions, Lines それぞれ80%以上）。
- テストのモック・スパイ機能を活用し、外部依存や副作用を排除した純粋なユニットテストを徹底する。
- コードリファクタや最適化の際は、既存テストがすべてパスすることを必ず確認する。
- 定期的にTypeScriptやVitestのバージョン・設定を見直し、最新のベストプラクティスを取り入れる。
