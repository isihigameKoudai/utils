/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './__root'
import { Route as ThreeDimensionImport } from './three-dimension'
import { Route as RouteConfigImport } from '../components/Menu/routeList'
import { Route as NavigationLayoutImport } from './NavigationLayout'
import { Route as IndexImport } from './index'
import { Route as ThreeDimensionIndexImport } from './three-dimension/index'
import { Route as StableFluidsIndexImport } from './stable-fluids/index'
import { Route as ShaderIndexImport } from './shader/index'
import { Route as PlaygroundIndexImport } from './playground/index'
import { Route as CryptoChartsIndexImport } from './crypto-charts/index'
import { Route as AudioIndexImport } from './audio/index'
import { Route as ThreeDimensionShadowsImport } from './three-dimension/shadows'
import { Route as ThreeDimensionShaderImport } from './three-dimension/shader'
import { Route as ThreeDimensionParticleImport } from './three-dimension/particle'
import { Route as Samples5starParticleImport } from './samples/5star-particle'
import { Route as CryptoChartsMultiImport } from './crypto-charts/multi'
import { Route as AudioSpeechImport } from './audio/speech'
import { Route as AudioMicImport } from './audio/mic'
import { Route as CryptoChartsMultiTokenImport } from './crypto-charts/multi/$token'

// Create/Update Routes

const ThreeDimensionRoute = ThreeDimensionImport.update({
  id: '/three-dimension',
  path: '/three-dimension',
  getParentRoute: () => rootRoute,
} as any)

const RouteConfigRoute = RouteConfigImport.update({
  id: '/routeConfig',
  path: '/routeConfig',
  getParentRoute: () => rootRoute,
} as any)

const NavigationLayoutRoute = NavigationLayoutImport.update({
  id: '/NavigationLayout',
  path: '/NavigationLayout',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ThreeDimensionIndexRoute = ThreeDimensionIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ThreeDimensionRoute,
} as any)

const StableFluidsIndexRoute = StableFluidsIndexImport.update({
  id: '/stable-fluids/',
  path: '/stable-fluids/',
  getParentRoute: () => rootRoute,
} as any)

const ShaderIndexRoute = ShaderIndexImport.update({
  id: '/shader/',
  path: '/shader/',
  getParentRoute: () => rootRoute,
} as any)

const PlaygroundIndexRoute = PlaygroundIndexImport.update({
  id: '/playground/',
  path: '/playground/',
  getParentRoute: () => rootRoute,
} as any)

const CryptoChartsIndexRoute = CryptoChartsIndexImport.update({
  id: '/crypto-charts/',
  path: '/crypto-charts/',
  getParentRoute: () => rootRoute,
} as any)

const AudioIndexRoute = AudioIndexImport.update({
  id: '/audio/',
  path: '/audio/',
  getParentRoute: () => rootRoute,
} as any)

const ThreeDimensionShadowsRoute = ThreeDimensionShadowsImport.update({
  id: '/shadows',
  path: '/shadows',
  getParentRoute: () => ThreeDimensionRoute,
} as any)

const ThreeDimensionShaderRoute = ThreeDimensionShaderImport.update({
  id: '/shader',
  path: '/shader',
  getParentRoute: () => ThreeDimensionRoute,
} as any)

const ThreeDimensionParticleRoute = ThreeDimensionParticleImport.update({
  id: '/particle',
  path: '/particle',
  getParentRoute: () => ThreeDimensionRoute,
} as any)

const Samples5starParticleRoute = Samples5starParticleImport.update({
  id: '/samples/5star-particle',
  path: '/samples/5star-particle',
  getParentRoute: () => rootRoute,
} as any)

const CryptoChartsMultiRoute = CryptoChartsMultiImport.update({
  id: '/crypto-charts/multi',
  path: '/crypto-charts/multi',
  getParentRoute: () => rootRoute,
} as any)

const AudioSpeechRoute = AudioSpeechImport.update({
  id: '/audio/speech',
  path: '/audio/speech',
  getParentRoute: () => rootRoute,
} as any)

const AudioMicRoute = AudioMicImport.update({
  id: '/audio/mic',
  path: '/audio/mic',
  getParentRoute: () => rootRoute,
} as any)

const CryptoChartsMultiTokenRoute = CryptoChartsMultiTokenImport.update({
  id: '/$token',
  path: '/$token',
  getParentRoute: () => CryptoChartsMultiRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/NavigationLayout': {
      id: '/NavigationLayout'
      path: '/NavigationLayout'
      fullPath: '/NavigationLayout'
      preLoaderRoute: typeof NavigationLayoutImport
      parentRoute: typeof rootRoute
    }
    '/routeConfig': {
      id: '/routeConfig'
      path: '/routeConfig'
      fullPath: '/routeConfig'
      preLoaderRoute: typeof RouteConfigImport
      parentRoute: typeof rootRoute
    }
    '/three-dimension': {
      id: '/three-dimension'
      path: '/three-dimension'
      fullPath: '/three-dimension'
      preLoaderRoute: typeof ThreeDimensionImport
      parentRoute: typeof rootRoute
    }
    '/audio/mic': {
      id: '/audio/mic'
      path: '/audio/mic'
      fullPath: '/audio/mic'
      preLoaderRoute: typeof AudioMicImport
      parentRoute: typeof rootRoute
    }
    '/audio/speech': {
      id: '/audio/speech'
      path: '/audio/speech'
      fullPath: '/audio/speech'
      preLoaderRoute: typeof AudioSpeechImport
      parentRoute: typeof rootRoute
    }
    '/crypto-charts/multi': {
      id: '/crypto-charts/multi'
      path: '/crypto-charts/multi'
      fullPath: '/crypto-charts/multi'
      preLoaderRoute: typeof CryptoChartsMultiImport
      parentRoute: typeof rootRoute
    }
    '/samples/5star-particle': {
      id: '/samples/5star-particle'
      path: '/samples/5star-particle'
      fullPath: '/samples/5star-particle'
      preLoaderRoute: typeof Samples5starParticleImport
      parentRoute: typeof rootRoute
    }
    '/three-dimension/particle': {
      id: '/three-dimension/particle'
      path: '/particle'
      fullPath: '/three-dimension/particle'
      preLoaderRoute: typeof ThreeDimensionParticleImport
      parentRoute: typeof ThreeDimensionImport
    }
    '/three-dimension/shader': {
      id: '/three-dimension/shader'
      path: '/shader'
      fullPath: '/three-dimension/shader'
      preLoaderRoute: typeof ThreeDimensionShaderImport
      parentRoute: typeof ThreeDimensionImport
    }
    '/three-dimension/shadows': {
      id: '/three-dimension/shadows'
      path: '/shadows'
      fullPath: '/three-dimension/shadows'
      preLoaderRoute: typeof ThreeDimensionShadowsImport
      parentRoute: typeof ThreeDimensionImport
    }
    '/audio/': {
      id: '/audio/'
      path: '/audio'
      fullPath: '/audio'
      preLoaderRoute: typeof AudioIndexImport
      parentRoute: typeof rootRoute
    }
    '/crypto-charts/': {
      id: '/crypto-charts/'
      path: '/crypto-charts'
      fullPath: '/crypto-charts'
      preLoaderRoute: typeof CryptoChartsIndexImport
      parentRoute: typeof rootRoute
    }
    '/playground/': {
      id: '/playground/'
      path: '/playground'
      fullPath: '/playground'
      preLoaderRoute: typeof PlaygroundIndexImport
      parentRoute: typeof rootRoute
    }
    '/shader/': {
      id: '/shader/'
      path: '/shader'
      fullPath: '/shader'
      preLoaderRoute: typeof ShaderIndexImport
      parentRoute: typeof rootRoute
    }
    '/stable-fluids/': {
      id: '/stable-fluids/'
      path: '/stable-fluids'
      fullPath: '/stable-fluids'
      preLoaderRoute: typeof StableFluidsIndexImport
      parentRoute: typeof rootRoute
    }
    '/three-dimension/': {
      id: '/three-dimension/'
      path: '/'
      fullPath: '/three-dimension/'
      preLoaderRoute: typeof ThreeDimensionIndexImport
      parentRoute: typeof ThreeDimensionImport
    }
    '/crypto-charts/multi/$token': {
      id: '/crypto-charts/multi/$token'
      path: '/$token'
      fullPath: '/crypto-charts/multi/$token'
      preLoaderRoute: typeof CryptoChartsMultiTokenImport
      parentRoute: typeof CryptoChartsMultiImport
    }
  }
}

// Create and export the route tree

interface ThreeDimensionRouteChildren {
  ThreeDimensionParticleRoute: typeof ThreeDimensionParticleRoute
  ThreeDimensionShaderRoute: typeof ThreeDimensionShaderRoute
  ThreeDimensionShadowsRoute: typeof ThreeDimensionShadowsRoute
  ThreeDimensionIndexRoute: typeof ThreeDimensionIndexRoute
}

const ThreeDimensionRouteChildren: ThreeDimensionRouteChildren = {
  ThreeDimensionParticleRoute: ThreeDimensionParticleRoute,
  ThreeDimensionShaderRoute: ThreeDimensionShaderRoute,
  ThreeDimensionShadowsRoute: ThreeDimensionShadowsRoute,
  ThreeDimensionIndexRoute: ThreeDimensionIndexRoute,
}

const ThreeDimensionRouteWithChildren = ThreeDimensionRoute._addFileChildren(
  ThreeDimensionRouteChildren,
)

interface CryptoChartsMultiRouteChildren {
  CryptoChartsMultiTokenRoute: typeof CryptoChartsMultiTokenRoute
}

const CryptoChartsMultiRouteChildren: CryptoChartsMultiRouteChildren = {
  CryptoChartsMultiTokenRoute: CryptoChartsMultiTokenRoute,
}

const CryptoChartsMultiRouteWithChildren =
  CryptoChartsMultiRoute._addFileChildren(CryptoChartsMultiRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/NavigationLayout': typeof NavigationLayoutRoute
  '/routeConfig': typeof RouteConfigRoute
  '/three-dimension': typeof ThreeDimensionRouteWithChildren
  '/audio/mic': typeof AudioMicRoute
  '/audio/speech': typeof AudioSpeechRoute
  '/crypto-charts/multi': typeof CryptoChartsMultiRouteWithChildren
  '/samples/5star-particle': typeof Samples5starParticleRoute
  '/three-dimension/particle': typeof ThreeDimensionParticleRoute
  '/three-dimension/shader': typeof ThreeDimensionShaderRoute
  '/three-dimension/shadows': typeof ThreeDimensionShadowsRoute
  '/audio': typeof AudioIndexRoute
  '/crypto-charts': typeof CryptoChartsIndexRoute
  '/playground': typeof PlaygroundIndexRoute
  '/shader': typeof ShaderIndexRoute
  '/stable-fluids': typeof StableFluidsIndexRoute
  '/three-dimension/': typeof ThreeDimensionIndexRoute
  '/crypto-charts/multi/$token': typeof CryptoChartsMultiTokenRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/NavigationLayout': typeof NavigationLayoutRoute
  '/routeConfig': typeof RouteConfigRoute
  '/audio/mic': typeof AudioMicRoute
  '/audio/speech': typeof AudioSpeechRoute
  '/crypto-charts/multi': typeof CryptoChartsMultiRouteWithChildren
  '/samples/5star-particle': typeof Samples5starParticleRoute
  '/three-dimension/particle': typeof ThreeDimensionParticleRoute
  '/three-dimension/shader': typeof ThreeDimensionShaderRoute
  '/three-dimension/shadows': typeof ThreeDimensionShadowsRoute
  '/audio': typeof AudioIndexRoute
  '/crypto-charts': typeof CryptoChartsIndexRoute
  '/playground': typeof PlaygroundIndexRoute
  '/shader': typeof ShaderIndexRoute
  '/stable-fluids': typeof StableFluidsIndexRoute
  '/three-dimension': typeof ThreeDimensionIndexRoute
  '/crypto-charts/multi/$token': typeof CryptoChartsMultiTokenRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/NavigationLayout': typeof NavigationLayoutRoute
  '/routeConfig': typeof RouteConfigRoute
  '/three-dimension': typeof ThreeDimensionRouteWithChildren
  '/audio/mic': typeof AudioMicRoute
  '/audio/speech': typeof AudioSpeechRoute
  '/crypto-charts/multi': typeof CryptoChartsMultiRouteWithChildren
  '/samples/5star-particle': typeof Samples5starParticleRoute
  '/three-dimension/particle': typeof ThreeDimensionParticleRoute
  '/three-dimension/shader': typeof ThreeDimensionShaderRoute
  '/three-dimension/shadows': typeof ThreeDimensionShadowsRoute
  '/audio/': typeof AudioIndexRoute
  '/crypto-charts/': typeof CryptoChartsIndexRoute
  '/playground/': typeof PlaygroundIndexRoute
  '/shader/': typeof ShaderIndexRoute
  '/stable-fluids/': typeof StableFluidsIndexRoute
  '/three-dimension/': typeof ThreeDimensionIndexRoute
  '/crypto-charts/multi/$token': typeof CryptoChartsMultiTokenRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/NavigationLayout'
    | '/routeConfig'
    | '/three-dimension'
    | '/audio/mic'
    | '/audio/speech'
    | '/crypto-charts/multi'
    | '/samples/5star-particle'
    | '/three-dimension/particle'
    | '/three-dimension/shader'
    | '/three-dimension/shadows'
    | '/audio'
    | '/crypto-charts'
    | '/playground'
    | '/shader'
    | '/stable-fluids'
    | '/three-dimension/'
    | '/crypto-charts/multi/$token'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/NavigationLayout'
    | '/routeConfig'
    | '/audio/mic'
    | '/audio/speech'
    | '/crypto-charts/multi'
    | '/samples/5star-particle'
    | '/three-dimension/particle'
    | '/three-dimension/shader'
    | '/three-dimension/shadows'
    | '/audio'
    | '/crypto-charts'
    | '/playground'
    | '/shader'
    | '/stable-fluids'
    | '/three-dimension'
    | '/crypto-charts/multi/$token'
  id:
    | '__root__'
    | '/'
    | '/NavigationLayout'
    | '/routeConfig'
    | '/three-dimension'
    | '/audio/mic'
    | '/audio/speech'
    | '/crypto-charts/multi'
    | '/samples/5star-particle'
    | '/three-dimension/particle'
    | '/three-dimension/shader'
    | '/three-dimension/shadows'
    | '/audio/'
    | '/crypto-charts/'
    | '/playground/'
    | '/shader/'
    | '/stable-fluids/'
    | '/three-dimension/'
    | '/crypto-charts/multi/$token'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  NavigationLayoutRoute: typeof NavigationLayoutRoute
  RouteConfigRoute: typeof RouteConfigRoute
  ThreeDimensionRoute: typeof ThreeDimensionRouteWithChildren
  AudioMicRoute: typeof AudioMicRoute
  AudioSpeechRoute: typeof AudioSpeechRoute
  CryptoChartsMultiRoute: typeof CryptoChartsMultiRouteWithChildren
  Samples5starParticleRoute: typeof Samples5starParticleRoute
  AudioIndexRoute: typeof AudioIndexRoute
  CryptoChartsIndexRoute: typeof CryptoChartsIndexRoute
  PlaygroundIndexRoute: typeof PlaygroundIndexRoute
  ShaderIndexRoute: typeof ShaderIndexRoute
  StableFluidsIndexRoute: typeof StableFluidsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  NavigationLayoutRoute: NavigationLayoutRoute,
  RouteConfigRoute: RouteConfigRoute,
  ThreeDimensionRoute: ThreeDimensionRouteWithChildren,
  AudioMicRoute: AudioMicRoute,
  AudioSpeechRoute: AudioSpeechRoute,
  CryptoChartsMultiRoute: CryptoChartsMultiRouteWithChildren,
  Samples5starParticleRoute: Samples5starParticleRoute,
  AudioIndexRoute: AudioIndexRoute,
  CryptoChartsIndexRoute: CryptoChartsIndexRoute,
  PlaygroundIndexRoute: PlaygroundIndexRoute,
  ShaderIndexRoute: ShaderIndexRoute,
  StableFluidsIndexRoute: StableFluidsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/NavigationLayout",
        "/routeConfig",
        "/three-dimension",
        "/audio/mic",
        "/audio/speech",
        "/crypto-charts/multi",
        "/samples/5star-particle",
        "/audio/",
        "/crypto-charts/",
        "/playground/",
        "/shader/",
        "/stable-fluids/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/NavigationLayout": {
      "filePath": "NavigationLayout.tsx"
    },
    "/routeConfig": {
      "filePath": "routeConfig.tsx"
    },
    "/three-dimension": {
      "filePath": "three-dimension.tsx",
      "children": [
        "/three-dimension/particle",
        "/three-dimension/shader",
        "/three-dimension/shadows",
        "/three-dimension/"
      ]
    },
    "/audio/mic": {
      "filePath": "audio/mic.tsx"
    },
    "/audio/speech": {
      "filePath": "audio/speech.tsx"
    },
    "/crypto-charts/multi": {
      "filePath": "crypto-charts/multi.tsx",
      "children": [
        "/crypto-charts/multi/$token"
      ]
    },
    "/samples/5star-particle": {
      "filePath": "samples/5star-particle.tsx"
    },
    "/three-dimension/particle": {
      "filePath": "three-dimension/particle.tsx",
      "parent": "/three-dimension"
    },
    "/three-dimension/shader": {
      "filePath": "three-dimension/shader.tsx",
      "parent": "/three-dimension"
    },
    "/three-dimension/shadows": {
      "filePath": "three-dimension/shadows.tsx",
      "parent": "/three-dimension"
    },
    "/audio/": {
      "filePath": "audio/index.tsx"
    },
    "/crypto-charts/": {
      "filePath": "crypto-charts/index.tsx"
    },
    "/playground/": {
      "filePath": "playground/index.tsx"
    },
    "/shader/": {
      "filePath": "shader/index.tsx"
    },
    "/stable-fluids/": {
      "filePath": "stable-fluids/index.tsx"
    },
    "/three-dimension/": {
      "filePath": "three-dimension/index.tsx",
      "parent": "/three-dimension"
    },
    "/crypto-charts/multi/$token": {
      "filePath": "crypto-charts/multi/$token.tsx",
      "parent": "/crypto-charts/multi"
    }
  }
}
ROUTE_MANIFEST_END */
